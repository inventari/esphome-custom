
uart:
  id: mod_bus
  tx_pin: 17
  rx_pin: 16
  baud_rate: 9600
  stop_bits: 1


modbus:
  id: modbus1

modbus_controller:
  - id: relay_add1_16ch
    address: 0x01   ## address of the ModBUS slave device on the bus
    modbus_id: modbus1
    update_interval: 5s
    offline_skip_updates: 60
  - id: relay_add2_16ch
    address: 0x02   ## address of the ModBUS slave device on the bus
    modbus_id: modbus1
    update_interval: 5s
    offline_skip_updates: 60
switch:
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 01'
    address: 1 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      ESP_LOGD("main","start_address = 0x%d",item->start_address);
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x01);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 02'
    address: 2 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x02);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 03'
    address: 3 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x03);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 04'
    address: 4 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x04);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 05'
    address: 5 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x05);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 06'
    address: 6 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x06);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 07'
    address: 7 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x07);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 08'
    address: 8 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x08);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 09'
    address: 9 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x09);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 10'
    address: 10 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0A);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 11'
    address: 11 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      ESP_LOGD("main","start_address = 0x%d",item->start_address);
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0B);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 12'
    address: 12 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0C);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 13'
    address: 13 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0D);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 14'
    address: 14 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0E);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 15'
    address: 15 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x0F);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
  - platform: modbus_controller
    modbus_controller_id: relay_add1_16ch
    name: 'R4D3B16 Relay 16'
    address: 16 # 0:all  1:relay1 2:relay2 ......
    register_type: coil
    write_lambda: |-
      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x10);
      return (x==0.0) ? relay.close(payload) : relay.open(payload);
#  - platform: modbus_controller
#    modbus_controller_id: relay_add1_16ch
#    name: 'R4D3B16 Relay All'
#    address: 0 # 0:all  1:relay1 2:relay2 ......
#    register_type: coil
#    write_lambda: |-
#      esphome::R4D3B16::R4D3B16Component relay(0x01, 0x00);
#      return (x==0.0) ? relay.close(payload) : relay.open(payload);